# --- H√†m nh·∫≠p ma tr·∫≠n ---
def nhap_ma_tran(ten):
    hang = int(input(f"Nh·∫≠p s·ªë h√†ng c·ªßa ma tr·∫≠n {ten}: "))
    cot = int(input(f"Nh·∫≠p s·ªë c·ªôt c·ªßa ma tr·∫≠n {ten}: "))
    print(f"Nh·∫≠p c√°c ph·∫ßn t·ª≠ cho ma tr·∫≠n {ten}:")
    
    matrix = []
    for i in range(hang):
        row = list(map(float, input(f"  H√†ng {i+1}: ").split()))
        while len(row) != cot:
            print(f" S·ªë ph·∫ßn t·ª≠ kh√¥ng kh·ªõp, c·∫ßn {cot} ph·∫ßn t·ª≠!")
            row = list(map(float, input(f"  H√†ng {i+1}: ").split()))
        matrix.append(row)
    return matrix

# --- H√†m in ma tr·∫≠n ---
def in_ma_tran(M):
    for row in M:
        print(" ".join(f"{x:6.2f}" for x in row))

# --- H√†m c·ªông 2 ma tr·∫≠n ---
def cong_ma_tran(A, B):
    hang = len(A)
    cot = len(A[0])
    C = [[A[i][j] + B[i][j] for j in range(cot)] for i in range(hang)]
    return C

# --- H√†m ho√°n v·ªã ma tr·∫≠n (Transpose) ---
def hoan_vi_ma_tran(M):
    return [[M[j][i] for j in range(len(M))] for i in range(len(M[0]))]


# --- Ch∆∞∆°ng tr√¨nh ch√≠nh ---
print("=== Nh·∫≠p ma tr·∫≠n A ===")
A = nhap_ma_tran("A")

print("\n=== Nh·∫≠p ma tr·∫≠n B ===")
B = nhap_ma_tran("B")

# --- Ki·ªÉm tra k√≠ch th∆∞·ªõc h·ª£p l·ªá ƒë·ªÉ c·ªông ---
if len(A) == len(B) and len(A[0]) == len(B[0]):
    print("\n‚ûï T·ªïng 2 ma tr·∫≠n A + B l√†:")
    tong = cong_ma_tran(A, B)
    in_ma_tran(tong)
else:
    print("\n Kh√¥ng th·ªÉ c·ªông 2 ma tr·∫≠n c√≥ k√≠ch th∆∞·ªõc kh√°c nhau!")

# --- Ho√°n v·ªã ma tr·∫≠n ---
print("\nüîÅ Ma tr·∫≠n ho√°n v·ªã c·ªßa A l√†:")
in_ma_tran(hoan_vi_ma_tran(A))

print("\nüîÅ Ma tr·∫≠n ho√°n v·ªã c·ªßa B l√†:")
in_ma_tran(hoan_vi_ma_tran(B))
